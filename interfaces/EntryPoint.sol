// SPDX-License-Identifier: LGPL-3.0-only
pragma solidity ^0.8.12;

/// @author SurfWallet Team

import "./UserOperation.sol";
import "./StakeManager.sol";

/**
 ** Account-Abstraction (EIP-4337) singleton EntryPoint abstract contract.
 **/
abstract contract EntryPoint is StakeManager {
    using UserOperationLib for UserOperation;

    /**
     * Execute a batch of UserOperation.
     * @param ops the operations to execute
     * @param beneficiary the address to receive the fees
     */
    function handleOps(
        UserOperation[] calldata ops,
        address payable beneficiary
    ) public virtual;

    /**
     * Get counterfactual sender address.
     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.
     * @param initCode the constructor code to be passed into the UserOperation.
     * @param salt the salt parameter, to be passed as "nonce" in the UserOperation.
     */
    function getSenderAddress(
        bytes memory initCode,
        uint256 salt
    ) public view virtual returns (address);
}
